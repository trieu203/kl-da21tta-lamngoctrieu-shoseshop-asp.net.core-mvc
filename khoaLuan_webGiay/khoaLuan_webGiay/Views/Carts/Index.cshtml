@model khoaLuan_webGiay.ViewModels.CartViewModel

@{
    ViewData["Title"] = "Giỏ hàng";
    Layout = "_Product";
}

<!-- Breadcrumb Start -->
<div class="container-fluid">
    <div class="row px-xl-5">
        <div class="col-12"></div>
    </div>
</div>
<!-- Breadcrumb End -->
<!-- Cart Start -->
<div class="container-fluid">
    <div class="row px-xl-5">
        @if (Model == null || Model.Items == null || !Model.Items.Any())
        {
            <!-- Thông báo khi giỏ hàng trống -->
            <div class="col-12 text-center py-5">
                <h4 class="text-muted">Giỏ hàng của bạn đang trống.</h4>
                <a asp-controller="Products" asp-action="Index" class="btn btn-lg btn-warning px-4" w-100>Quay lại mua sắm</a>
            </div>
        }
        else
        {
            <!-- Hiển thị giỏ hàng -->
            <div class="col-lg-8 table-responsive mb-5">
                <table class="table table-light table-borderless table-hover text-center mb-0">
                    <thead class="thead-dark">
                        <tr>
                            <th>Sản phẩm</th>
                            <th>Giá</th>
                            <th>Số lượng</th>
                            <th>Kích cỡ</th>
                            <th>Tổng tiền</th>
                            <th>Xóa</th>
                        </tr>
                    </thead>
                    <tbody class="align-middle">
                        @foreach (var item in Model.Items)
                        {
                            <tr>
                                <td class="align-middle">
                                    <div class="d-flex align-items-center">
                                        <img src="@Url.Content("~/img/products/" + item.ImageUrl)" style="width: 50px; height: auto;">
                                        <a asp-action="Details" asp-controller="Products" asp-route-id="@item.ProductId">  <span>@item.ProductName</span> </a>
                                    </div>
                                </td>

                                <td class="align-middle">@item.PriceAtTime.ToString("N0") VND</td>
                                <td class="align-middle">
                                    <div class="input-group quantity mx-auto" style="width: 100px;">
                                        <div class="input-group-btn">
                                            <button class="btn btn-sm btn-primary btn-minus" data-id="@item.CartItemId" data-action="minus">
                                                <i class="fa fa-minus"></i>
                                            </button>
                                        </div>
                                        <input type="text" class="form-control form-control-sm bg-secondary border-0 text-center quantity-input" data-id="@item.CartItemId" value="@item.Quantity">
                                        <div class="input-group-btn">
                                            <button class="btn btn-sm btn-primary btn-plus" data-id="@item.CartItemId" data-action="plus">
                                                <i class="fa fa-plus"></i>
                                            </button>
                                        </div>
                                    </div>
                                </td>

                                @if (TempData["Message"] != null)
                                {
                                    <div class="alert alert-info">@TempData["Message"]</div>
                                }

                                <td class="align-middle">
                                    <span>@item.Size</span>
                                </td>
                                <td class="align-middle total-price">
                                    @((item.PriceAtTime * item.Quantity).ToString("N0")) VND
                                </td>
                                <td class="align-middle">
                                    <form asp-action="RemoveFromCart" method="post">
                                        <input type="hidden" name="id" value="@item.CartItemId" />
                                        <button type="submit" class="btn btn-sm btn-danger">
                                            <i class="fa fa-times"></i>
                                        </button>
                                    </form>
                                </td>

                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <!-- Cart Summary -->
            <div class="col-lg-4">
                <h5 class="section-title position-relative text-uppercase mb-3">
                    <span class="bg-secondary pr-3">Giỏ hàng</span>
                </h5>
                <div class="bg-light p-30 mb-5">
                    <div class="border-bottom pb-2">
                        <div class="d-flex justify-content-between mb-3">
                            <h6>Tạm tính</h6>
                            <h6 id="subtotal">@Model.Items.Sum(x => x.PriceAtTime * x.Quantity).ToString("N0") VNĐ</h6>
                        </div>
                        <div class="d-flex justify-content-between">
                            <h6 class="font-weight-medium">Phí vận chuyển</h6>
                            <h6 class="font-weight-medium">50,000 VNĐ</h6>
                        </div>
                    </div>
                    <div class="pt-2">
                        <div class="d-flex justify-content-between mt-2">
                            <h5>Tổng tiền:</h5>
                            <h5 id="cart-total">
                                @string.Format("{0:N0} VNĐ", Model.Items.Sum(x => x.PriceAtTime * x.Quantity) + 50000)
                            </h5>
                        </div>
                        <a asp-action="Checkout"><button class="btn btn-block btn-primary font-weight-bold my-3 py-3">Tiến hành thanh toán</button> </a>
                    </div>
                </div>
            </div>
        }
    </div>
</div>
<!-- Cart End -->
@section Scripts {
    <script>
        $(document).ready(function () {
            // Hàm cập nhật tổng tiền và số lượng
            function updateTotal() {
                let subtotal = 0;
                const shippingFee = 50000; // Phí vận chuyển cố định
                $(".quantity-input").each(function () {
                    let quantity = parseInt($(this).val()) || 0;
                    let price = parseFloat($(this).closest("tr").find("td:eq(1)").text().replace(" VND", "").replace(/,/g, "")) || 0;
                    let totalPrice = price * quantity;

                    // Cập nhật tổng tiền của từng sản phẩm
                    $(this).closest("tr").find(".total-price").text(totalPrice.toLocaleString() + " VND");
                    subtotal += totalPrice;
                });

                // Cập nhật tổng tiền và phí vận chuyển
                const totalAmount = subtotal + shippingFee;
                $("#subtotal").text(subtotal.toLocaleString() + " VND");
                $("#cart-total").text(totalAmount.toLocaleString() + " VND");
            }

            // Hàm gửi yêu cầu cập nhật số lượng đến server
            function updateQuantity(cartItemId, quantity, quantityInput) {
                if (quantity <= 0) {
                    alert("Số lượng phải lớn hơn 0.");
                    quantityInput.val(1); // Khôi phục số lượng hợp lệ
                    updateTotal();
                    return;
                }

                $.ajax({
                    url: "/Carts/UpdateQuantity",
                    method: "POST",
                    data: { cartItemId: cartItemId, quantity: quantity },
                    success: function (response) {
                        if (response.success) {
                            // Cập nhật tổng tiền sản phẩm và giỏ hàng
                            $(`.total-price[data-id="${cartItemId}"]`).text(response.totalPrice.toLocaleString() + " VND");
                            $("#cart-total").text(response.cartTotal.toLocaleString() + " VND");
                        } else {
                            alert(response.message);
                            quantityInput.val(quantity - 1); // Khôi phục giá trị trước đó nếu có lỗi
                            updateTotal();
                        }
                    },
                    error: function () {
                        alert("Có lỗi xảy ra. Vui lòng thử lại.");
                    }
                });
            }

            // Lắng nghe sự kiện tăng/giảm số lượng
            $(".btn-minus, .btn-plus").on("click", function () {
                const quantityInput = $(this).closest(".input-group").find(".quantity-input");
                const cartItemId = $(this).data("id");
                let quantity = parseInt(quantityInput.val()) || 0;

                // Tăng hoặc giảm số lượng
                if ($(this).hasClass("btn-plus")) {
                    quantity += 0;
                } else if ($(this).hasClass("btn-minus") && quantity > 1) {
                    quantity -= 0;
                }

                // Cập nhật giá trị trong ô input
                quantityInput.val(quantity);

                // Gửi yêu cầu cập nhật số lượng đến server
                updateQuantity(cartItemId, quantity, quantityInput);
            });

            // Lắng nghe sự kiện thay đổi số lượng trực tiếp
            $(".quantity-input").on("change", function () {
                const quantity = parseInt($(this).val()) || 0;
                const cartItemId = $(this).data("id");
                updateQuantity(cartItemId, quantity, $(this));
            });

            // Lắng nghe sự kiện xóa sản phẩm
            $("form").on("submit", function (e) {
                if (!confirm("Bạn có chắc chắn muốn xóa sản phẩm này khỏi giỏ hàng?")) {
                    e.preventDefault();
                }
            });

            // Cập nhật tổng tiền khi tải trang lần đầu
            updateTotal();
        });
    </script>
}
